{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { Dismiss } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState } from \"react\";\nimport ResultadoIMC from \"./ResultadoIMC/\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      altura = _useState2[0],\n      setAltura = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      peso = _useState4[0],\n      setPeso = _useState4[1];\n\n  var _useState5 = useState(\"Preencha os campos altura e peso.\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      msg = _useState6[0],\n      setMsg = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imc = _useState8[0],\n      setImc = _useState8[1];\n\n  var _useState9 = useState(\"Calcular\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      textButton = _useState10[0],\n      setTextButton = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      msgErro = _useState12[0],\n      setMsgErro = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      imcList = _useState14[0],\n      setImcList = _useState14[1];\n\n  function validaIMCValues() {\n    if (altura != null && peso != null) {\n      setMsg(\"Seu é IMC: \");\n      setPeso(null);\n      setAltura(null);\n      setTextButton(\"Novo Calculo\");\n      setMsgErro(null);\n    } else {\n      if (imc == null) {\n        setMsgErro(\"*Campo Obrigatório*\");\n        Vibration.vibrate(1000);\n      }\n\n      setImc(null);\n      setTextButton(\"Calcular\");\n      setMsg(\"Preencha os valores de altura e peso!\");\n    }\n  }\n\n  function calculaIMC() {\n    validaIMCValues();\n\n    if (altura != null && peso != null) {\n      var alturaFormatada = altura.replace(\",\", \".\");\n      var pesoFormatado = peso.replace(\",\", \".\");\n      var totalImc = (pesoFormatado / (alturaFormatada * alturaFormatada)).toFixed(2);\n      setImcList(function (arr) {\n        return [].concat(_toConsumableArray(arr), [{\n          id: new Date().getTime(),\n          imc: totalImc\n        }]);\n      });\n      setImc(totalImc);\n    }\n\n    return imc;\n  }\n\n  return _jsxs(View, {\n    style: styles.formContext,\n    children: [imc == null ? _jsxs(Pressable, {\n      onPress: Keyboard.dismiss,\n      style: styles.formulario,\n      children: [_jsx(Text, {\n        children: \"Entre com sua Altura:\"\n      }), _jsx(Text, {\n        style: styles.errorMessage,\n        children: msgErro\n      }), _jsx(TextInput, {\n        style: styles.formInput,\n        onChangeText: setAltura,\n        value: altura,\n        placeholder: \"Ex.: 1.80\",\n        keyboardType: \"numeric\"\n      }), _jsx(Text, {\n        children: \"Entre com seu Peso:\"\n      }), _jsx(Text, {\n        style: styles.errorMessage,\n        children: msgErro\n      }), _jsx(TextInput, {\n        style: styles.formInput,\n        onChangeText: setPeso,\n        value: peso,\n        placeholder: \"Ex.: 80\",\n        keyboardType: \"numeric\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonCalc,\n        onPress: function onPress() {\n          return calculaIMC();\n        },\n        children: _jsx(Text, {\n          style: styles.textButtonCalc,\n          children: textButton\n        })\n      })]\n    }) : _jsxs(View, {\n      style: styles.exibeImc,\n      children: [_jsx(ResultadoIMC, {\n        mensagemResultado: msg,\n        valorResultado: imc\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonCalc,\n        onPress: function onPress() {\n          return calculaIMC();\n        },\n        children: _jsx(Text, {\n          style: styles.textButtonCalc,\n          children: textButton\n        })\n      })]\n    }), _jsx(FlatList, {\n      showsVerticalScrollIndicator: false,\n      style: styles.listaImc,\n      data: imcList.reverse(),\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(Text, {\n          style: styles.itemListaImc,\n          children: [_jsx(Text, {\n            style: styles.textItemImc,\n            children: \"IMC:\"\n          }), item.imc]\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/remakker/Documents/recode/aula1/calculadoraimc-master/src/components/Form/index.js"],"names":["React","Dismiss","useState","ResultadoIMC","styles","Form","altura","setAltura","peso","setPeso","msg","setMsg","imc","setImc","textButton","setTextButton","msgErro","setMsgErro","imcList","setImcList","validaIMCValues","Vibration","vibrate","calculaIMC","alturaFormatada","replace","pesoFormatado","totalImc","toFixed","arr","id","Date","getTime","formContext","Keyboard","dismiss","formulario","errorMessage","formInput","buttonCalc","textButtonCalc","exibeImc","listaImc","reverse","item","itemListaImc","textItemImc"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n    Dismiss,\n    FlatList, \n    Keyboard, \n    Pressable, \n    Text, \n    TextInput, \n    TouchableOpacity, \n    Vibration, \n    View } from \"react-native\";\n\nimport {useState} from \"react\";\nimport ResultadoIMC from \"./ResultadoIMC/\";\nimport styles from \"./styles\";\n\n\n//definir a funcao dos formularios\nexport default function Form(){\n\n\n    const[altura,setAltura] = useState(null);\n    const[peso,setPeso] = useState(null);\n    const[msg,setMsg] = useState(\"Preencha os campos altura e peso.\");\n    const[imc,setImc] = useState(null);\n    const[textButton,setTextButton] = useState(\"Calcular\");\n    const[msgErro,setMsgErro] = useState(null);\n    const[imcList,setImcList] = useState([]);\n\n    function validaIMCValues(){\n        if(altura != null && peso != null){\n            setMsg(\"Seu é IMC: \");\n            setPeso(null);\n            setAltura(null);\n            setTextButton(\"Novo Calculo\");\n            setMsgErro(null);\n        }else{\n            if(imc == null){\n                setMsgErro(\"*Campo Obrigatório*\");\n                Vibration.vibrate(1000);//1 segundo = 1000\n            }\n            setImc(null);\n            setTextButton(\"Calcular\");\n            setMsg(\"Preencha os valores de altura e peso!\");\n        }\n    }\n\n    function calculaIMC(){\n        validaIMCValues();\n        if(altura != null && peso != null){\n            //formatar peso e altura para que fiquem com .\n            let alturaFormatada = altura.replace(\",\",\".\");\n            let pesoFormatado = peso.replace(\",\",\".\");\n            let totalImc = ((pesoFormatado/(alturaFormatada*alturaFormatada)).toFixed(2));\n            setImcList((arr) => [...arr, {id: new Date().getTime(), imc:totalImc}]);\n            setImc(totalImc);\n        }\n\n        return imc;\n    }\n\n    return(\n        <View style={styles.formContext}>\n\n            { imc == null ? \n\n            <Pressable onPress={Keyboard.dismiss} style={styles.formulario}>            \n                <Text>Entre com sua Altura:</Text>\n                <Text style={styles.errorMessage}>{msgErro}</Text>\n                <TextInput \n                    style={styles.formInput}\n                    onChangeText={setAltura}\n                    value={altura}\n                    placeholder=\"Ex.: 1.80\"\n                    keyboardType=\"numeric\"\n                />\n                <Text>Entre com seu Peso:</Text>\n                <Text style={styles.errorMessage}>{msgErro}</Text>\n                <TextInput \n                    style={styles.formInput}\n                    onChangeText={setPeso}\n                    value={peso}\n                    placeholder=\"Ex.: 80\"\n                    keyboardType=\"numeric\"\n                />\n                <TouchableOpacity \n                    style={styles.buttonCalc}\n                    onPress= {() => calculaIMC()}\n                >\n                    <Text style={styles.textButtonCalc}>{textButton}</Text>\n                </TouchableOpacity>\n            </Pressable>\n            :\n                <View style={styles.exibeImc}>\n                    <ResultadoIMC \n                        mensagemResultado={msg} \n                        valorResultado = {imc} \n                    />\n                     <TouchableOpacity \n                        style={styles.buttonCalc}\n                        onPress= {() => calculaIMC()}\n                    >\n                    <Text style={styles.textButtonCalc}>{textButton}</Text>\n                    </TouchableOpacity>\n                </View>\n            }\n            <FlatList \n                showsVerticalScrollIndicator = {false}\n                style={styles.listaImc}\n                data={imcList.reverse()}\n                renderItem = {({item}) => {\n                    return(\n                        <Text style={styles.itemListaImc}>\n                            <Text style={styles.textItemImc}>IMC:</Text>\n                            {item.imc}\n                        </Text>\n\n                    );\n                } }\n                keyExtractor={(item) => item.id}\n            ></FlatList>\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}