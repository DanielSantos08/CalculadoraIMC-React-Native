{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ResultadoIMC(resultado) {\n  var onShare = function onShare() {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Share.share({\n              message: \"Meu IMC é: \" + resultado.valorResultado\n            }));\n\n          case 2:\n            result = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    style: styles.resultImc,\n    children: _jsxs(View, {\n      style: styles.boxShared,\n      children: [_jsx(Text, {\n        style: styles.informacao,\n        children: resultado.mensagemResultado\n      }), _jsx(Text, {\n        style: styles.nroImc,\n        children: resultado.valorResultado\n      }), _jsx(TouchableOpacity, {\n        style: styles.botaoShared,\n        onPress: onShare,\n        children: _jsx(Text, {\n          style: styles.textShared,\n          children: \"Share\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/remakker/Documents/recode/aula1/calculadoraimc-master/src/components/Form/ResultadoIMC/index.js"],"names":["React","styles","ResultadoIMC","resultado","onShare","Share","share","message","valorResultado","result","resultImc","boxShared","informacao","mensagemResultado","nroImc","botaoShared","textShared"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,MAAP;;;AAOA,eAAe,SAASC,YAAT,CAAsBC,SAAtB,EAAgC;AAEvC,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACSC,KAAK,CAACC,KAAN,CAAY;AAC/BC,cAAAA,OAAO,EACL,gBAAcJ,SAAS,CAACK;AAFK,aAAZ,CADT;;AAAA;AACNC,YAAAA,MADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAOJ,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,SAApB;AAAA,cACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACU,SAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACW,UAApB;AAAA,kBAAiCT,SAAS,CAACU;AAA3C,QADJ,EAEI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACa,MAApB;AAAA,kBAA6BX,SAAS,CAACK;AAAvC,QAFJ,EAGQ,KAAC,gBAAD;AACI,QAAA,KAAK,EAAEP,MAAM,CAACc,WADlB;AAEI,QAAA,OAAO,EAAEX,OAFb;AAAA,kBAII,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACe,UAApB;AAAA;AAAA;AAJJ,QAHR;AAAA;AADJ,IADJ;AAcH","sourcesContent":["import React from \"react\";\nimport {View, Share, Text, TouchableOpacity} from \"react-native\";\nimport styles from \"./styles\";\n\n/*   definir a funcao para demonstrar mensagem e o resultado do calculo\n     A ideia eh receber o objeto resultado com 2 props, \n     uma mensagem e um valor correspondente ao IMC calculado\n*/\n\nexport default function ResultadoIMC(resultado){\n\n        const onShare = async () => {\n            const result = await Share.share({\n              message:\n                \"Meu IMC é: \"+resultado.valorResultado,\n            });\n        }\n\n    return(\n        <View style={styles.resultImc}>\n            <View style={styles.boxShared}>\n                <Text style={styles.informacao}>{resultado.mensagemResultado}</Text>\n                <Text style={styles.nroImc}>{resultado.valorResultado}</Text>\n                    <TouchableOpacity\n                        style={styles.botaoShared}\n                        onPress={onShare}\n                    >\n                        <Text style={styles.textShared}>Share</Text>\n                    </TouchableOpacity>\n            </View>\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}